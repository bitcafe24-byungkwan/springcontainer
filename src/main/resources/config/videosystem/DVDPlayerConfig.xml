<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:annotation-config />
	<context:component-scan	base-package="com.cafe24.springcontainer.soundsystem">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Component" />
	</context:component-scan>

	<!-- 01. 간단한 빈 설정 -->
	<bean class = "com.cafe24.springcontainer.videosystem.Avengers"/>
	
	<!-- 02. 설정된 빈에 id 부여하기 -->
	<bean id="ironMan" class = "com.cafe24.springcontainer.videosystem.IronMan"/>
	
	<!-- 03. 생성자를 통한 빈 주입 01 -->
	<bean id="dvdPlayer2" class = "com.cafe24.springcontainer.videosystem.DVDPlayer">
		<constructor-arg ref="ironMan"/>
	</bean>
	
	<!-- 04. 생성자를 통한 빈 주입 02 : c-nammespace의 argument name 사용
			 Spring 3.0부터 지원-->
	<bean id="dvdPlayer3" class = "com.cafe24.springcontainer.videosystem.DVDPlayer" c:dvd-ref="ironMan"/>
		
	<!-- 05. 생성자를 통한 빈 주입 03 : c-nammespace의 argument index 사용
			 Spring 3.0부터 지원-->
	<bean id="dvdPlayer4" class = "com.cafe24.springcontainer.videosystem.DVDPlayer" c:_0-ref="ironMan"/>
	
	<!-- 06. 생성자를 통한 빈 주입 04 : c-nammespace의 argument index 사용(case : only one argument
			 Spring 3.0부터 지원-->
	<bean id="dvdPlayer5" class = "com.cafe24.springcontainer.videosystem.DVDPlayer" c:_-ref="ironMan"/>
	
	
	<!-- 07. 생성자를 통한 빈 주입 05 : literal값을 생성자에 주입하는 경우 01 -->
	<bean id="avengersInfinityWar" class = "com.cafe24.springcontainer.videosystem.BlankDisc">
		<constructor-arg name="title" value = "Avengers Infinity War"/>
		<constructor-arg name="studio" value = "MARVEL"/>
	</bean>
	
	<!-- 08. 생성자를 통한 빈 주입 06 : literal값을 생성자에 주입하는 경우 02 -->
	<bean id="avengersEndgame" class = "com.cafe24.springcontainer.videosystem.BlankDisc"
	c:title="Avengers Endgame" 
	c:studio="MARVEL" />

	<!-- 09. 생성자를 통한 빈 주입 07 : literal값을 생성자에 주입하는 경우 03 -->
	<bean id="avengersAgeOfUltron" class = "com.cafe24.springcontainer.videosystem.BlankDisc"
	c:_1="MARVEL" c:_0="Avengers Age Of Ultron" />
	
	
	
	
	<!-- 10. 생성자를 통한 빈 주입 08 : Wiring Collection 01 -->
	<bean id="captainAmerica" class = "com.cafe24.springcontainer.videosystem.BlankDisc">
		<constructor-arg name="title" value = "Captain America"/>
		<constructor-arg name="studio" value = "MARVEL"/>
		<constructor-arg><null/></constructor-arg>
	</bean>
	
	<!-- 11. 생성자를 통한 빈 주입 09 : Wiring Collection 02 -->
	<bean id="avengersDirectorEdition" class = "com.cafe24.springcontainer.videosystem.BlankDisc">
		<constructor-arg name="title" value = "Avengers Director`s Edition"/>
		<constructor-arg name="studio" value = "MARVEL"/>
		<constructor-arg>
			<list>
				<value>Scarlett Johansson</value>
				<value>Jeremy Renner</value>
				<value>Chris Evans</value>
			</list>
		</constructor-arg>
	</bean>
	
	<!-- 12. 생성자를 통한 빈 주입 10 : Wiring Collection 03 -->
	<bean id="avengersTriplepack" class = "com.cafe24.springcontainer.videosystem.DVDPack">
		<constructor-arg name="title" value = "Avengers Triplepack"/>		
		<constructor-arg>
			<list>
				<ref bean = "avengersAgeOfUltron" />				
				<ref bean = "avengersEndgame" />
				<ref bean = "avengersInfinityWar" />
			</list>
		</constructor-arg>
	</bean>
	
	<!-- 13. Property를 통한 빈 주입 01 -->
	<bean id="dvdPlayer6" class = "com.cafe24.springcontainer.videosystem.DVDPlayer">
		<property name = "dvd" ref = "avengersInfinityWar"/>
	</bean>
	
	<!-- 14. Property를 통한 빈 주입 02 -->
	<bean id="dvdPlayer7" 
		class = "com.cafe24.springcontainer.videosystem.DVDPlayer" 
		p:dvd-ref="avengersInfinityWar"
	/>

	<!-- 15. Property를 통한 빈 주입 03 -->
	<bean id="avengersExpansionPack1" class = "com.cafe24.springcontainer.videosystem.BlankDisc">
		<property name="title" value = "Avengers Expansion Pack 1"/>
		<property name="studio" value = "MARVEL"/>
		<property name = "actors">
			<list>
				<value>Scarlett Johansson</value>
				<value>Jeremy Renner</value>
				<value>Chris Evans</value>
			</list>
		</property>
	</bean>
	
	<!-- 16. Property를 통한 빈 주입 04 -->
	<bean id="avengersExpansionPack2" class = "com.cafe24.springcontainer.videosystem.BlankDisc"
	p:title="Avengers Expansion Pack 2"
	p:studio = "MARVEL" >
		<property name = "actors">
			<list>
				<value>Scarlett Johansson</value>
				<value>Jeremy Renner</value>
				<value>Chris Evans</value>
			</list>
		</property>
	</bean>
	
	<!-- 17. Property를 통한 빈 주입 05 -->
	<util:list id="actorList">
		<value>Scarlett Johansson</value>
		<value>Jeremy Renner</value>
		<value>Chris Evans</value>
	</util:list>
	<bean id="avengersExpansionPack3" class = "com.cafe24.springcontainer.videosystem.BlankDisc"
	p:title="Avengers Expansion Pack 3"
	p:studio = "MARVEL" 
	p:actors-ref = "actorList" 
	/>

</beans>